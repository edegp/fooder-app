version: "3.9"
services:
  web:
    container_name: go_app
    build:
      context: .
      dockerfile: "Dockerfile.dev"
      args:
        - ENV="dev-remote"
    ports:
      - "8080:8080"
    depends_on:
      sql_proxy:
        condition: service_healthy
      firebase:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - ./cloudsql:/cloudsql
    env_file:
      - ./.env
    networks:
      - proxy
      - remote_default
  db:
    # mac対応
    platform: linux/x86_64
    image: mysql:latest
    container_name: mysql_host
    restart: always
    environment:
      MYSQL_DATABASE: fooder
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      TZ: Asia/Tokyo
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 5s
    depends_on:
      sql_proxy:
        condition: service_healthy
    tty: true
    volumes:
      # volumeの作成
      - data-volume:/var/lib/mysql
      - ./cloudsql:/cloudsql
      # bind mountでconfig 反映
      - ./cloudsql/my.cnf:/etc/mysql/my.cnf
    networks:
      - proxy
  # firebase emulator
  firebase:
    build:
      context: ./firebase
      dockerfile: ./Dockerfile
      args:
        - GCLOUD_PROJECT=${GCLOUD_PROJECT}
    container_name: firebase
    ports:
      - 4000:4000
      - 9099:9099
    # ip固定
    networks:
      remote_default:
        ipv4_address: 192.22.0.3
    tty: true
    volumes:
      - user-data:/opt/workspace/firebase
  sql_proxy:
    container_name: sql_proxy
    build:
      context: .
      dockerfile: ./cloudsql/Dockerfile
    restart: always
    command: /cloud_sql_proxy -dir=/cloudsql -instances=fooder-379012:us-central1:fooder -use_http_health_check
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8090"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 5s
    env_file:
      - ./.env
    volumes:
      - ./cloudsql:/cloudsql
      - ./service_account:/service_account
    networks:
      - proxy

volumes:
  data-volume:
  user-data:
networks:
  remote_default:
    name: remote_default
    driver: bridge
    ipam:
      config:
        - subnet: 192.22.0.0/16
  proxy:
    name: proxy
    driver: bridge
